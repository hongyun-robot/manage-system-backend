syntax = "v1"

//cd .\config\api\
//goctl api go -api .\api.api -dir ..\..\front-api\

info(
    title: "article"
    desc: "type desc here"
    author: "fortune zhang"
    email: "1836017030@qq.com"
    version: "1.0.0"
)
type ArticleRespose struct {
    Code uint16 `json:"code"`
    Data []*ArticleData `json:"data"`
    Message string `json:"message"`
}

type AddArticleReq struct {
    Title    string `json:"title"`
    Content  string `json:"content"`
    Status   uint32   `json:"status"`
    Draft   bool   `json:"draft,default=1"`
    ClassifyIds []uint64 `json:"classifyIds,optional,default=[]"`
}

type GetArticleReq {
    ID uint64 `path:"id"`
}

type UpdateArticleReq struct {
    Id uint64 `path:"id"`
    Title    string `json:"title"`
    Content  string `json:"content"`
    Status   uint32   `json:"status"`
    Draft   bool   `json:"draft,default=1"`
    ClassifyIds []uint64 `json:"classifyIds,optional,default=[]"`
}

type DeleteArticleReq {
    ID uint64 `path:"id"`
}

type ArticleData struct {
    ID       uint64  `json:"id"`
    Title    string `json:"title"`
    Content  string `json:"content"`
    CreateAt int64  `json:"createAt"`
    UpdateAt int64  `json:"updateAt"`
    DeleteAt int64  `json:"deleteAt"`
    Status   uint32   `json:"status"`
    Draft   bool   `json:"draft,default=1"`
    ClassifyData []*ArticleClassifyData `json:"classifyData,optional"`
}

type ArticleClassifyData struct {
    ID         uint64   `json:"id"`
    Name       string `json:"name"`
    Icon       string `json:"icon"`
}

@server(
    group: article
    prefix: /api/article
)
service front-api {
    @handler AddArticle
    post /add(AddArticleReq) returns(ArticleRespose)

    @handler GetArticle
    get /:id(GetArticleReq) returns(ArticleRespose)

    @handler UpdateArticle
    put /:id(UpdateArticleReq) returns(ArticleRespose)

    @handler DeleteArticle
    delete /:id(DeleteArticleReq) returns(ArticleRespose)
}