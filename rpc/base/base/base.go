// Code generated by goctl. DO NOT EDIT.
// Source: base.proto

package base

import (
	"context"

	"bolg/rpc/base/base_client"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeleteMenuRequest = base_client.DeleteMenuRequest
	GetMenuRequest    = base_client.GetMenuRequest
	MenuData          = base_client.MenuData
	MenuListResponse  = base_client.MenuListResponse
	UpdateMenuRequest = base_client.UpdateMenuRequest

	Base interface {
		AddMenu(ctx context.Context, in *MenuListResponse, opts ...grpc.CallOption) (*MenuListResponse, error)
		GetMenu(ctx context.Context, in *GetMenuRequest, opts ...grpc.CallOption) (*MenuListResponse, error)
		UpdateMenu(ctx context.Context, in *UpdateMenuRequest, opts ...grpc.CallOption) (*MenuListResponse, error)
		DeleteMenu(ctx context.Context, in *DeleteMenuRequest, opts ...grpc.CallOption) (*MenuListResponse, error)
	}

	defaultBase struct {
		cli zrpc.Client
	}
)

func NewBase(cli zrpc.Client) Base {
	return &defaultBase{
		cli: cli,
	}
}

func (m *defaultBase) AddMenu(ctx context.Context, in *MenuListResponse, opts ...grpc.CallOption) (*MenuListResponse, error) {
	client := base_client.NewBaseClient(m.cli.Conn())
	return client.AddMenu(ctx, in, opts...)
}

func (m *defaultBase) GetMenu(ctx context.Context, in *GetMenuRequest, opts ...grpc.CallOption) (*MenuListResponse, error) {
	client := base_client.NewBaseClient(m.cli.Conn())
	return client.GetMenu(ctx, in, opts...)
}

func (m *defaultBase) UpdateMenu(ctx context.Context, in *UpdateMenuRequest, opts ...grpc.CallOption) (*MenuListResponse, error) {
	client := base_client.NewBaseClient(m.cli.Conn())
	return client.UpdateMenu(ctx, in, opts...)
}

func (m *defaultBase) DeleteMenu(ctx context.Context, in *DeleteMenuRequest, opts ...grpc.CallOption) (*MenuListResponse, error) {
	client := base_client.NewBaseClient(m.cli.Conn())
	return client.DeleteMenu(ctx, in, opts...)
}
